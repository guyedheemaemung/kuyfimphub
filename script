local Venyx = loadstring(game:HttpGet("https://raw.githubusercontent.com/Stefanuk12/Venyx-UI-Library/main/source2.lua"))()
local UI = Venyx.new({ title = "KuyFimpHub"})

local Themes = {
    Background = Color3.fromRGB(24, 24, 24),
    Glow = Color3.fromRGB(0, 0, 0),
    Accent = Color3.fromRGB(10, 10, 10),
    LightContrast = Color3.fromRGB(20, 20, 20),
    DarkContrast = Color3.fromRGB(14, 14, 14),  
    TextColor = Color3.fromRGB(255, 255, 255)
}

local Main = UI:addPage({ title = "Main",icon = 5012544693 })

local AutoFarmSection = Main:addSection({title = "AutoFarm" })


local mobs = {}
getgenv().mobselect = nil

for _,v in pairs(game:GetService("Workspace").NPCS:GetChildren()) do
    insert = true
    for _,v2 in pairs(mobs) do if v2 == v.Name then insert = false end end
    if insert then table.insert(mobs, v.Name) end
end

local mobdropdown = AutoFarmSection:addDropdown({
    title = "Select Mob",
    list = mobs,
    callback = function(v)
        getgenv().mobselect = v
    end
})

AutoFarmSection:addToggle({
    title = "Start AutoFarm",
    callback = function(v)
        getgenv().autofarmmobs = v
        while wait() do
            if getgenv().autofarmmobs == false then return end
            if getgenv().mobselect == nil then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Hee",
                    Text = "เลือกตัวที่มึงจะตีดิไอโง่ Choose mob niggas",
                    Icon = "",
                    Duration = 2
                })
                getgenv().autofarmmobs = false
                return
            end
            local mob = game:GetService("Workspace").NPCS:FindFirstChild(getgenv().mobselect)
            if mob == nil then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "KUY",
                    Text = "รอก่อนดิไอโง่ Just wait niggas",
                    Icon = "",
                    Duration = 2
                })
                while wait() do
                    wait()
                    if getgenv().autofarmmobs == false then return end 
                    if game:GetService("Workspace").NPCS:FindFirstChild(getgenv().mobselect) ~= nil then break; end
                end
            else
                local mob2 = mob
                while wait() do
                    mob = game:GetService("Workspace").NPCS:FindFirstChild(getgenv().mobselect)
                    if mob ~= mob2 then break; end
                    if getgenv().autofarmmobs == false then return end
                    if mob ~= nil then
                        if mob:FindFirstChild("Humanoid") then
                            if mob.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
                        end
                        if mob:FindFirstChild("HumanoidRootPart") then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0,0,4)
                            game:GetService'VirtualUser':CaptureController()
                            game:GetService'VirtualUser':Button1Down(Vector2.new(50, 50))
                        end
                    end
                    wait()
                end
            end
        end
    end
})

game:GetService("Workspace").NPCS.ChildAdded:Connect(function()
    for _,v2 in pairs(mobs) do table.remove(mobs, _) end

    for _,v in pairs(game:GetService("Workspace").NPCS:GetChildren()) do
        insert = true
        for _,v2 in pairs(mobs) do if v2 == v.Name then insert = false end end
        if insert then table.insert(mobs, v.Name) end
    end
    mobdropdown:Refresh(mobs)
end)

game:GetService("Workspace").NPCS.ChildRemoved:Connect(function()
    for _,v2 in pairs(mobs) do table.remove(mobs, _) end

    for _,v in pairs(game:GetService("Workspace").NPCS:GetChildren()) do
        insert = true
        for _,v2 in pairs(mobs) do if v2 == v.Name then insert = false end end
        if insert then table.insert(mobs, v.Name) end
    end
    mobdropdown:Refresh(mobs)
end)

local AutoEquiped = Main:addSection({
    title = "AutoEquip"
})

local Weaponlist = {}
local Weapon = nil

for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    table.insert(Weaponlist,v.Name)
end


AutoEquiped:addDropdown({
    title = "Select Weapon",
    list = Weaponlist,
    callback = function(currentOption)
    Weapon = currentOption
    end
})

AutoEquiped:addToggle({
    title = "Equip weapon",
    callback = function(a)
        Equipweapon = a
    end
})

spawn(function()
    while wait() do
    if Equipweapon then
    pcall(function()
    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(Weapon))
    end)
    end
    end
    end)

local Teleport = UI:addPage({title = "Teleport",icon = 5012544693})

local Players = Teleport:addSection({title = "Players"})

players = {}
 
for i,v in pairs(game:GetService("Players"):GetChildren()) do
   table.insert(players,v.Name)
end

Players:addDropdown({
    title = "Select Player",
    list = players,
    callback = function(abc)
        select = abc
    end
})

Players:addButton({
    title = "Teleport Player",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[select].Character.HumanoidRootPart.CFrame
    end
})

Players:addButton({
    title = "Refresh",
    callback = function()
        table.clear(players)
            for i,v in pairs(game:GetService("Players"):GetChildren()) do
                table.insert(players,v.Name)
            end
    end
})

local Maps = Teleport:addSection({title = "Maps"})

Maps:addButton({
    title = "Spawn",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-47.8338165, 4.34570122, 64.9913788, 0.999762058, 6.75999559e-08, -0.0218144935, -6.76990339e-08, 1, -3.803307e-09, 0.0218144935, 5.27922195e-09, 0.999762058)
end})

Maps:addButton({
    title = "Desert",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-146.240677, 25.2757015, -1289.67273, 0.9997226, -3.48360238e-08, 0.0235569552, 3.26230172e-08, 1, 9.43283425e-08, -0.0235569552, -9.35336075e-08, 0.9997226)
end})

Maps:addButton({
    title = "Forest",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(579.037964, 7.296875, 44.7396278, 0.999925435, 2.81164478e-08, -0.0122132795, -2.83730177e-08, 1, -2.08341984e-08, 0.0122132795, 2.11791722e-08, 0.999925435)
end})

Maps:addButton({
    title = "Snow island",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-41.5738602, -48.3037529, 2482.60913, 0.999012768, -7.1315462e-08, -0.0444174297, 7.51288241e-08, 1, 8.41833696e-08, 0.0444174297, -8.74373143e-08, 0.999012768)
end})

Maps:addButton({
    title = "Death island",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(26.0806065, -22.439455, 5630.23193, -0.97010541, -3.51692764e-09, 0.242684036, -9.74318581e-09, 1, -2.44556233e-08, -0.242684036, -2.60890474e-08, -0.97010541)
end})

Maps:addButton({
    title = "Morioh",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(127531.648, 416.003479, -178.515579, 0.257582843, 1.07617282e-07, -0.966256201, -3.60860888e-08, 1, 1.01755745e-07, 0.966256201, 8.65787264e-09, 0.257582843)
end})

Maps:addButton({
    title = "Wamuu",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").FolderOfFolders.Wamuu.Wamuu.HumanoidRootPart.CFrame
end})

Maps:addButton({
    title = "Hamon Requiem",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(304.343719, 7.296875, -178.338974, -0.767717719, 2.35419026e-08, 0.640788198, 6.43673985e-08, 1, 4.03785343e-08, -0.640788198, 7.22451858e-08, -0.767717719)
end})

Maps:addButton({
    title = "Vampire to Hamon",
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3.80350971, 25.2757015, -2405.91577, -0.014737512, 2.10109175e-09, -0.9998914, -4.00745126e-09, 1, 2.16038609e-09, 0.9998914, 4.03885458e-09, -0.014737512)
end})

local MISC = UI:addPage({
    title = "MISC",
    icon = 5012544693
})

local TeleportSection = MISC:addSection({
    title = "Teleport"
})

TeleportSection:addButton({
    title = "Start TP chests",
    callback = function()
        
    end
})

TeleportSection:addToggle({
    title = "TP arrows",
    callback = function(tpa)
        arrowtp = tpa
    end
})

spawn(function()
while wait(0.1) do
if arrowtp then
pcall(function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Arrows.Arrow.ArrowPart.CFrame
end)
end
end
end)

TeleportSection:addToggle({
    title = "TP Rebirth arrow",
    callback = function(tpr)
        rebirtharrowtp = tpr
    end
})

spawn(function()
while wait(0.1) do
if rebirtharrowtp then
pcall(function ()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Arrows["Rebirth Arrow"].ArrowPart.CFrame            
end)
end
end
end)

local PlayerSection = MISC:addSection({
    title = "Player"
})

PlayerSection:addSlider({
    title = "Speed",
    default = 0,
    min = 0,
    max = 500,
    callback = function(s)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
    end
})

PlayerSection:addSlider({
    title = "Jump Power",
    default = 0,
    min = 0,
    max = 500,
    callback = function(p)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = p
    end
})

local UIsetting = MISC:addSection({
    title = "UI setup"
})

UIsetting:addKeybind({
    title = "set your key for Hide the UI ",
    key = Enum.KeyCode.One,
    callback = function()
        print("Activated Keybind")
        UI:toggle()
    end,
    changedCallback = function(key)
        print("Changed Keybind", key)
    end
})

for theme, color in pairs(Themes) do
    UIsetting:addColorPicker({
        title = theme,
        default = color,
        callback = function(color3)
            UI:setTheme({
                theme = theme, 
                color3 = color3
            })
        end
    })
end
